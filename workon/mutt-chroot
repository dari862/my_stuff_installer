#!/bin/bash
set -e
# debian missing goimapnotify pam-gnupg abook urlview
# arch   missing pam-gnupg abook urlview

CHROOT_DIR="/opt/neomutt-chroot"
MW_REPO="https://github.com/LukeSmithxyz/mutt-wizard.git"
LAUNCHER="$HOME/enter-arch-chroot.sh"

echo "==> Creating chroot directory at $CHROOT_DIR"
sudo mkdir -p "$CHROOT_DIR"

if command -v pacman >/dev/null 2>&1;then
	sudo pacman -Sy  arch-install-scripts --noconfirm
	echo "==> Bootstrapping Arch base system with neomutt and git..."
	sudo pacstrap -c "$CHROOT_DIR" base base-devel neomutt git nano curl isync msmtp pass gettext ca-certificates goimapnotify lynx notmuch cronie mpop --noconfirm
elif command -v apt >/dev/null 2>&1; then
    echo "==> Installing debootstrap..."
    sudo apt update
    sudo apt install -y debootstrap
    echo "==> Bootstrapping Debian base system with neomutt and git..."
    sudo debootstrap stable "$CHROOT_DIR" http://deb.debian.org/debian
fi
	
echo "==> Copying DNS info..."
sudo cp /etc/resolv.conf "$CHROOT_DIR/etc/resolv.conf"

echo "==> Mounting /dev, /proc, /sys..."
sudo mount --bind /dev "$CHROOT_DIR/dev"
sudo mount --bind /proc "$CHROOT_DIR/proc"
sudo mount --bind /sys "$CHROOT_DIR/sys"

echo "==> Exporting xterm-kitty terminfo from host..."
infocmp xterm-kitty > $CHROOT/tmp/xterm-kitty.terminfo

echo "==> Entering chroot to install mutt-wizard..."

if command -v pacman >/dev/null 2>&1;then
	sudo chroot "$CHROOT_DIR" /bin/bash <<-EOC
	set -e
	echo "[*] Inside chroot."
	# Initialize keys
	pacman-key --init
	pacman-key --populate archlinux
	EOC
elif command -v apt >/dev/null 2>&1; then
	sudo chroot "$CHROOT_DIR" /bin/bash <<-EOC
	set -e
	echo "[*] Inside chroot."
	apt update
	apt install -y build-essential neomutt git nano curl isync msmtp pass gettext ca-certificates lynx notmuch cron mpop
	
	# Optional: Setup user or additional post-install tasks
	# echo "[*] Setup complete."
	EOC
fi

sudo chroot "$CHROOT_DIR" /bin/bash <<EOC
# Clone and install mutt-wizard
echo "[*] Cloning mutt-wizard..."
cd /tmp
git clone $MW_REPO
cd mutt-wizard
make install

useradd -m -s /bin/bash chroot

echo "export TERM=xterm-kitty" >> /root/.bashrc
su - chroot -c 'tic /tmp/xterm-kitty.terminfo'

rm -rdf /tmp/xterm-kitty.terminfo /tmp/mutt-wizard
EOC

echo "==> Cleaning up mounts..."
sudo umount "$CHROOT_DIR/dev"
sudo umount "$CHROOT_DIR/proc"
sudo umount "$CHROOT_DIR/sys"

echo "[*] Creating launcher script: $LAUNCHER"

cat > "$LAUNCHER" <<EOF
#!/bin/bash
sudo chroot $CHROOT_DIR /bin/su - chroot
EOF

chmod +x "$LAUNCHER"

echo "==> Done! You can enter the chroot with: $LAUNCHER"
echo "and run 'mw init' to configure mutt-wizard."
