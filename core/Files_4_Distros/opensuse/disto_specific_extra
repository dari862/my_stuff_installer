#!/bin/sh
create_to_be_purged_list(){
	[ -f "${installer_phases}/create_to_be_purged_list" ] && return
		_purge_it=""
		to_be_purged="aisleriot anthy kasumi aspell debian-reference-common fcitx fcitx-bin fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-mozc five-or-more four-in-a-row gnome-chess gnome-klotski gnome-mahjongg gnome-mines gnome-music gnome-nibbles gnome-robots gnome-sudoku gnome-taquin gnome-tetravex gnote goldendict hamster-applet hdate-applet hexchat hitori iagno khmerconverter lightsoff mate-themes malcontent mlterm mlterm-tiny mozc-utils-gui quadrapassel reportbug rhythmbox scim simple-scan sound-juicer swell-foop tali uim xboard xiterm+thai xterm im-config xfce4-notifyd xfce4-power-manager* "
		
		# fonts-linuxlibertine break polybar 
		# fonts-linuxlibertine installed from libreoffice
		package_installed snapd && show_sm "adding snap package to remove list" && snap="snapd" || snap=""
		package_installed linuxlibertine && show_im "adding fonts-linuxlibertine to purging list (fonts-linuxlibertine break polybar) " && linuxlibertine="linuxlibertine" || linuxlibertine=""
		to_be_purged="${to_be_purged} ${install_autoinstall_firmware} ${snap} ${linuxlibertine}"
		for package in ${to_be_purged};do
			if package_installed "$package";then
				_purge_it="$_purge_it $package"
			else
				show_wm_only "$package does not exist"
			fi
		done
		echo "_purge_it=\"$_purge_it\"" >> "${save_value_file}"
	touch "${installer_phases}/create_to_be_purged_list"
}

purge_some_unnecessary_pakages(){
	[ -f "${installer_phases}/purge_some_unnecessary_pakages" ] && return
	show_m "purge some unnecessary pakages"
	create_to_be_purged_list
	if [ "$run_purge_some_unnecessary_pakages" = "Y" ];then
		show_im "purging apps"
		remove_packages "${_purge_it}"
	fi
	run_autoclean
	touch "${installer_phases}/purge_some_unnecessary_pakages"
}

disable_some_unnecessary_services(){
	[ -f "${installer_phases}/disable_some_unnecessary_services" ] && return
	touch "${installer_phases}/disable_some_unnecessary_services"
}
